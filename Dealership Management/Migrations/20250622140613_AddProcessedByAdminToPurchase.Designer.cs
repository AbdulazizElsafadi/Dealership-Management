// <auto-generated />
using System;
using Dealership_Management.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dealership_Management.Migrations
{
    [DbContext(typeof(DealershipDbContext))]
    [Migration("20250622140613_AddProcessedByAdminToPurchase")]
    partial class AddProcessedByAdminToPurchase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Dealership_Management.Models.OtpCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OtpCodes");
                });

            modelBuilder.Entity("Dealership_Management.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PriceAtPurchase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProcessedByAdminId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProcessedByAdminId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Dealership_Management.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@dealership.com",
                            FullName = "Admin User",
                            PasswordHash = "hashed_password",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "customer@dealership.com",
                            FullName = "Customer User",
                            PasswordHash = "hashed_password",
                            Role = 0
                        });
                });

            modelBuilder.Entity("Dealership_Management.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Mileage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Silver",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Well-maintained sedan with low mileage",
                            IsAvailable = true,
                            Make = "Toyota",
                            Mileage = 15000,
                            Model = "Camry",
                            Price = 25000.00m,
                            Year = 2022
                        },
                        new
                        {
                            Id = 2,
                            Color = "Blue",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Reliable SUV with great fuel economy",
                            IsAvailable = true,
                            Make = "Honda",
                            Mileage = 22000,
                            Model = "CR-V",
                            Price = 28000.00m,
                            Year = 2021
                        },
                        new
                        {
                            Id = 3,
                            Color = "Red",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sporty coupe, low mileage",
                            IsAvailable = true,
                            Make = "Ford",
                            Mileage = 5000,
                            Model = "Mustang",
                            Price = 35000.00m,
                            Year = 2023
                        },
                        new
                        {
                            Id = 4,
                            Color = "White",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Reliable sedan, one owner",
                            IsAvailable = true,
                            Make = "Chevrolet",
                            Mileage = 30000,
                            Model = "Malibu",
                            Price = 18000.00m,
                            Year = 2020
                        },
                        new
                        {
                            Id = 5,
                            Color = "Black",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Electric, autopilot included",
                            IsAvailable = true,
                            Make = "Tesla",
                            Mileage = 12000,
                            Model = "Model 3",
                            Price = 42000.00m,
                            Year = 2022
                        },
                        new
                        {
                            Id = 6,
                            Color = "Gray",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Luxury SUV, well maintained",
                            IsAvailable = true,
                            Make = "BMW",
                            Mileage = 35000,
                            Model = "X5",
                            Price = 39000.00m,
                            Year = 2019
                        },
                        new
                        {
                            Id = 7,
                            Color = "Blue",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Premium sedan, great condition",
                            IsAvailable = true,
                            Make = "Audi",
                            Mileage = 18000,
                            Model = "A4",
                            Price = 32000.00m,
                            Year = 2021
                        },
                        new
                        {
                            Id = 8,
                            Color = "Silver",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fuel efficient, compact sedan",
                            IsAvailable = true,
                            Make = "Hyundai",
                            Mileage = 25000,
                            Model = "Elantra",
                            Price = 16000.00m,
                            Year = 2020
                        },
                        new
                        {
                            Id = 9,
                            Color = "White",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Spacious SUV, family friendly",
                            IsAvailable = true,
                            Make = "Kia",
                            Mileage = 40000,
                            Model = "Sorento",
                            Price = 21000.00m,
                            Year = 2018
                        },
                        new
                        {
                            Id = 10,
                            Color = "Black",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Luxury sedan, almost new",
                            IsAvailable = true,
                            Make = "Mercedes-Benz",
                            Mileage = 9000,
                            Model = "C-Class",
                            Price = 45000.00m,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("Dealership_Management.Models.OtpCode", b =>
                {
                    b.HasOne("Dealership_Management.Models.User", "User")
                        .WithMany("OtpCodes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dealership_Management.Models.Purchase", b =>
                {
                    b.HasOne("Dealership_Management.Models.User", "ProcessedByAdmin")
                        .WithMany()
                        .HasForeignKey("ProcessedByAdminId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dealership_Management.Models.User", "User")
                        .WithMany("Purchases")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dealership_Management.Models.Vehicle", "Vehicle")
                        .WithMany("Purchases")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProcessedByAdmin");

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Dealership_Management.Models.User", b =>
                {
                    b.Navigation("OtpCodes");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("Dealership_Management.Models.Vehicle", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
